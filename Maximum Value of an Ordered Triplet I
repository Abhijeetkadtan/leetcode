class Solution {
    // Brute force approach: O(N^3) complexity
    public long maximumTripletValueN3(int[] nums) {
        int n = nums.length;
        long max = 0;
        // Iterate over all triplets (i, j, k) such that i < j < k
        for(int i = 0; i < n; i++) {
            for(int j = i + 1; j < n; j++) {
                for(int k = j + 1; k < n; k++) {
                    // Calculate the triplet value
                    long v = (nums[i] - nums[j]) * (long) nums[k];
                    // Update max if the current triplet value is larger
                    if(v > max) max = v;
                }
            }
        }
        return max;
    }
